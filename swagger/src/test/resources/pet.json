{
    "apiVersion": "1",
    "apis": [
        {
            "description": "",
            "operations": [
                {
                    "deprecated": false,
                    "errorResponses": [],
                    "httpMethod": "GET",
                    "nickname": "allPets",
                    "notes": "shows all the pets in the data store",
                    "parameters": [],
                    "responseClass": "List[Pet]",
                    "summary": "Show all pets"
                },
                {
                    "deprecated": false,
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": "Pet not found"
                        }
                    ],
                    "httpMethod": "PUT",
                    "nickname": "updatePet",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "dataType": "Pet",
                            "description": "Pet object that needs to be updated in the store",
                            "name": "body",
                            "paramType": "body",
                            "required": true
                        }
                    ],
                    "responseClass": "void",
                    "summary": "Update an existing pet"
                },
                {
                    "deprecated": false,
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid pet data supplied"
                        }
                    ],
                    "httpMethod": "POST",
                    "nickname": "addPet",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "dataType": "Pet",
                            "description": "Pet object that needs to be added to the store",
                            "name": "body",
                            "paramType": "body",
                            "required": true
                        }
                    ],
                    "responseClass": "void",
                    "summary": "Add a new pet to the store"
                }
            ],
            "path": "/pet",
            "secured": true
        },
        {
            "description": "",
            "operations": [
                {
                    "deprecated": false,
                    "errorResponses": [],
                    "httpMethod": "GET",
                    "nickname": "findPetsByStatus",
                    "notes": "Multiple status values can be provided with comma separated strings",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "available",
                                    "pending",
                                    "sold"
                                ]
                            },
                            "dataType": "string",
                            "defaultValue": "available",
                            "description": "Status values that need to be considered for filter",
                            "name": "status",
                            "paramType": "query",
                            "required": true
                        }
                    ],
                    "responseClass": "List[Pet]",
                    "summary": "Finds Pets by status"
                }
            ],
            "path": "/pet/findByStatus",
            "secured": true
        },
        {
            "description": "",
            "operations": [
                {
                    "deprecated": false,
                    "errorResponses": [],
                    "httpMethod": "GET",
                    "nickname": "findByTags",
                    "notes": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "dataType": "string",
                            "description": "Tags to filter by",
                            "name": "tags",
                            "paramType": "query",
                            "required": true
                        }
                    ],
                    "responseClass": "List[Pet]",
                    "summary": "Finds Pets by tags"
                }
            ],
            "path": "/pet/findByTags",
            "secured": true
        },
        {
            "description": "",
            "operations": [
                {
                    "deprecated": false,
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid ID supplied"
                        },
                        {
                            "code": 404,
                            "reason": "Pet not found"
                        }
                    ],
                    "httpMethod": "GET",
                    "nickname": "findById",
                    "notes": "Returns a pet when ID < 10. ID > 10 or nonintegers will simulate API error conditions",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "dataType": "string",
                            "description": "ID of pet that needs to be fetched",
                            "name": "id",
                            "paramType": "path",
                            "required": true
                        }
                    ],
                    "responseClass": "Pet",
                    "summary": "Find by ID"
                }
            ],
            "path": "/pet/{id}",
            "secured": true
        }
    ],
    "basePath": "http://localhost:8080/api",
    "description": "Operations about pets",
    "models": {
        "Pet": {
            "description": "Pet",
            "id": "Pet",
            "properties": {
                "category": {
                    "description": null,
                    "required": true,
                    "type": "Category"
                },
                "id": {
                    "description": null,
                    "required": true,
                    "type": "long"
                },
                "name": {
                    "description": null,
                    "required": true,
                    "type": "string"
                },
                "status": {
                    "description": "pet availability",
                    "required": true,
                    "allowableValues": {
                        "valueType": "LIST",
                        "values": [
                            "available",
                            "sold"
                        ]
                    },
                    "type": "string"
                },
                "tags": {
                    "description": null,
                    "required": true,
                    "type": "Array",
                    "uniqueItems": false,
                    "items": {
                        "$ref": "Tag"
                    }
                },
                "urls": {
                    "description": null,
                    "required": true,
                    "type": "Array",
                    "uniqueItems": false,
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "resourcePath": "/pet",
    "swaggerVersion": "1.1"
}